<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manji.backstage.mapper.login.AuthMapper" >

<select id="getLocalUsers"  resultType="LocalUser">
	select * from bac_user  
</select>

<select id ="getLocalRoleByUser" parameterType="int" resultType="LocalRole">
	select * from bac_role t2,(select roleid from bac_ur_rel where userid =#{0}) t1 where t1.roleid=t2.id order by rolename
</select> 

<select id="getLocalUser"  parameterType="int" resultType="LocalUser">
	select * from bac_user where id=#{0}
</select>

<update id="updLocalUser" parameterType="LocalUser" >
	update bac_user set username=#{userName},password=#{password},url=#{url},state=#{state} where id=#{id}
</update>

<select id="getURRelation" parameterType="int" resultType="RoleToUser">
	select * from bac_ur_rel where userid=#{0} order by rolename
</select>

<insert id="addLocalRoleToUser" parameterType="RoleToUser" >
insert into bac_ur_rel(userid,username,roleid,rolename,addtime) values(#{userId},#{userName},#{roleId},#{roleName},#{addTime})
</insert>

<delete id="delLocalRoleToUser" parameterType="int">
delete from bac_ur_rel where id=#{0}
</delete>



<insert id="addLocalUser" parameterType="LocalUser">
	insert into bac_user (username,password,url,state) values(#{userName},#{password},#{url},#{state});
</insert>

<select id="getLocalRole"  resultType="LocalRole">
	select * from bac_role
</select>

<select id="getLocalRoleList" parameterType="int"  resultType="LocalRole">
	select * from bac_role where id=#{id}
</select>

<select id="checkRoleName" parameterType="java.lang.String" resultType="int">
	select count(*) from bac_role where rolename =#{0}
</select>

<insert id="addLocalRole" parameterType="LocalRole" >
insert into bac_role(rolename, remark,addtime) values(#{roleName},#{remark},#{addTime})
</insert>

<update id="updLocalRole" parameterType="LocalRole">
update bac_role set
rolename = #{roleName},
remark = #{remark},
addtime = #{addTime}
where id = #{id}
</update>

<delete id="delLocalRole" parameterType="int">
delete from bac_role where id=#{0}
</delete>

<select id="checkUserName" parameterType="java.lang.String" resultType="int">
select count(*) from bac_user where username=#{0}
</select>

<delete id="delLocalUser" parameterType="int" >
delete from bac_user where id=#{0}
</delete>


<select id="getLocalRoleToUser" parameterType="int" resultType="RoleToUser">
select * from bac_ur_rel where id=#{0}
</select>


<select id="countPermission" parameterType="PermissionVo" resultType="int">
select count(*) from bac_permission
</select>

<select id="queryLocalPermission" parameterType="PermissionVo" resultType="LocalPermission">
select * from bac_permission dt1,
(
	select top 20 id from  
	(
		select top(#{index}*20) id from bac_permission  where 1=1
		order by id desc
	)dt order by dt.id asc
)dt2 where dt1.id=dt2.id order by dt1.id
</select>

<select id="getPermission" parameterType="int" resultType="LocalPermission">
select * from bac_permission where id=#{id}
</select>

<update id="updPermission" parameterType="LocalPermission">
update bac_permission set
model = #{model},
modelname = #{modelname},
title = #{title},
url = #{url},
sort = #{sort}
where id = #{id}
</update>

<insert id="addPermission" parameterType="LocalPermission">
insert into bac_permission (model,modelname,title,url,sort)
values (#{model},#{modelname},#{title},#{url},#{sort})
</insert>

<delete id="delPermission" parameterType="int">
delete from bac_permission where id =#{id}
</delete>


<select id="getPermissionModel" parameterType="java.lang.String" resultType="java.lang.String" >
select model from bac_permission where url=#{0}
</select>


</mapper>