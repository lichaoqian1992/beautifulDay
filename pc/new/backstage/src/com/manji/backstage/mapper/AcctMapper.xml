<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manji.backstage.mapper.AcctMapper">

	<!-- // dt_user_accountinfo 用户账户信息表 -->
	<!-- 账户状态统计 -->
	<select id="countAccountGroup" resultType="map">
		select case state
		when 0 then '冻结'
		when 1 then '正常'
		else '异常' end as state,count(*) as count from dt_user_accountinfo group by
		state
	</select>

	<select id="getAccount" parameterType="int" resultType="Account">
		select * from dt_user_accountinfo where id=#{0}
	</select>

	<select id="countAccount" parameterType="AccountVo" resultType="int">
		select count(*) from dt_user_accountinfo where 1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="role_type != null and role_type != '-1'">
			and role_type=#{role_type}
		</if>

		and state=#{state}


	</select>

	<select id="queryAccount" parameterType="AccountVo" resultType="Account">


		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_accountinfo   where  1=1


		order by id desc
		)vip)mvp where temprownumber>((#{index}-1)*20)

	</select>



	<!-- // dt_user_recharge 用户充值记录信息表 // dt_user_transaction 用户转账记录信息表 // dt_user_withdrawals 
		用户提现记录信息表 -->

	<select id="countRecharge" parameterType="RechargeVo"
		resultType="int">
		select count(*) from dt_user_recharge where 1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="status != null and status != '-1'">
			and status=#{status}
		</if>
		<if test="account_id != null and account_id != ''">
			and account_id=#{account_id}
		</if>
		<if test="recharge_no != null and recharge_no != ''">
			and recharge_no=#{recharge_no}
		</if>
	</select>

	<select id="queryRecharge" parameterType="RechargeVo"
		resultType="Recharge">


		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_recharge   where  1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>

		<if test="account_id != null and account_id != ''">
			and account_id=#{account_id}
		</if>
		<if test="recharge_no != null and recharge_no != ''">
			and recharge_no=#{recharge_no}
		</if>
		<if test="status != null and status != '-1'">
			and status=#{status}
		</if>

		order by id desc
		)vip)mvp where temprownumber>((#{index}-1)*20)


	</select>


	<select id="countTransaction" parameterType="TransactionVo"
		resultType="int">
		select count(*) from dt_user_transaction where 1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="touser_id != null and touser_id != ''">
			and touser_id=#{touser_id}
		</if>
		<if test="transaction_no != null and transaction_no != ''">
			and transaction_no=#{transaction_no}
		</if>
		<if test="status != null and status != '-1'">
			and status=#{status}
		</if>

	</select>


	<select id="queryTransaction" parameterType="TransactionVo"
		resultType="Transaction">


		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_transaction   where  1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="touser_id != null and touser_id != ''">
			and touser_id=#{touser_id}
		</if>
		<if test="transaction_no != null and transaction_no != ''">
			and transaction_no=#{transaction_no}
		</if>
		<if test="status != null and status != '-1'">
			and status=#{status}
		</if>

		order by id desc
		)vip)mvp where temprownumber>((#{index}-1)*20)

	</select>


	<select id="countWithdrawals" parameterType="WithdrawalsVo"
		resultType="int">
		select count(*) from dt_user_withdrawals where 1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="account_id != null and account_id != ''">
			and account_id=#{account_id}
		</if>
		<if test="withdrawals_no != null and withdrawals_no != ''">
			and withdrawals_no=#{withdrawals_no}
		</if>
		<if test="status != null and status != '-1'">
			and status=#{status}
		</if>
	</select>

	<select id="queryWithdrawals" parameterType="WithdrawalsVo"
		resultType="Withdrawals">



		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_withdrawals   where  1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="account_id != null and account_id != ''">
			and account_id=#{account_id}
		</if>
		<if test="withdrawals_no != null and withdrawals_no != ''">
			and withdrawals_no=#{withdrawals_no}
		</if>
		<if test="status != null and status != '-1'">
			and status=#{status}
		</if>

		order by id desc
		)vip)mvp where temprownumber>((#{index}-1)*20)

	</select>

	<select id="getRecharge" parameterType="int" resultType="Recharge">
		select * from dt_user_recharge where id=#{0}
	</select>

	<select id="getTransaction" parameterType="int" resultType="Transaction">
		select * from dt_user_transaction where id=#{0}
	</select>

	<select id="getWithdrawals" parameterType="int" resultType="Withdrawals">
		select * from dt_user_withdrawals where id=#{0}
	</select>
	<update id="updAccount" parameterType="Account">
		update dt_user_accountinfo
		set
		user_id=#{user_id},
		role_type=#{role_type},
		role_value=#{role_value},
		amount=#{amount},
		point=#{point},
		reputation=#{reputation},
		credit=#{credit},
		voucher=#{voucher},
		is_fastpay=#{is_fastpay},
		state=#{state},
		remark=#{remark},
		update_time=#{update_time},
		float_amount=#{float_amount},
		float_voucher=#{float_voucher},
		float_point=#{float_point},
		allow_amount=#{allow_amount},
		allow_voucher=#{allow_voucher},
		withdrawals_commission=#{withdrawals_commission}
		where id=#{id}

	</update>

	<update id="updRecharge" parameterType="Recharge">
		update dt_user_recharge
		set
		user_id=#{user_id},
		user_role_type=#{user_role_type},
		user_role_value=#{user_role_value},
		account_id=#{account_id},
		recharge_no=#{recharge_no},
		payment_id=#{payment_id},
		amount=#{amount},
		status=#{status},
		add_time=#{add_time},
		complete_time=#{complete_time},
		transaction_no=#{transaction_no},
		is_del=#{is_del},
		voucher=#{voucher}
		where id=#{id}

	</update>


	<update id="updTransaction" parameterType="Transaction">
		update dt_user_transaction set
		user_id=#{user_id},
		user_role_type=#{user_role_type},
		user_role_value=#{user_role_value},
		touser_id=#{touser_id},
		touser_role_type=#{touser_role_type},
		touser_role_value=#{touser_role_value},
		transaction_no=#{transaction_no},
		amount=#{amount},
		status=#{status},
		add_time=#{add_time},
		complete_time=#{complete_time},
		remark=#{remark},
		is_del=#{is_del}
		where id=#{id}

	</update>

	<!-- // dt_user_amount_log 用户余额日志表 -->
	<select id="countAmountLog" parameterType="AmountLogVo"
		resultType="int">
		select count(*) from dt_user_amount_log where 1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
	</select>
	<select id="queryAmountLog" parameterType="AmountLogVo"
		resultType="AmountLog">

		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_amount_log   where  1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="user_role_type != null and user_role_type != ''">
			and user_role_type=#{user_role_type}
		</if>

		order by id desc
		)vip)mvp where temprownumber>((#{index}-1)*20)


	</select>
	<select id="getAmountLog" parameterType="int" resultType="AmountLog">
		select * from dt_user_amount_log where id=#{0}
	</select>
	<update id="updAmountLog" parameterType="AmountLog">
		update dt_user_amount_log
		set
		user_id=#{user_id},
		user_role_type=#{user_role_type},
		user_role_value=#{user_role_value},
		account_id=#{account_id},
		value=#{value},
		order_no=#{order_no},
		type=#{type},
		remark=#{remark},
		add_time=#{add_time},
		old_value=#{old_value},
		new_value=#{new_value},
		user_ip=#{user_ip},
		transaction_no=#{transaction_no}
		where id=#{id}
	</update>
	<delete id="delAmountLog" parameterType="int">
		delete from dt_user_amount_log where id=#{0}
	</delete>

	<!-- // dt_user_voucher_log 用户虚拟全日志表 -->
	<select id="countVoucherLog" parameterType="VoucherLogVo"
		resultType="int">
		select count(*) from dt_user_voucher_log where 1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
	</select>
	<select id="queryVoucherLog" parameterType="VoucherLogVo"
		resultType="VoucherLog">

		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_voucher_log   where  1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="user_role_type != null and user_role_type != ''">
			and user_role_type=#{user_role_type}
		</if>

		order by id desc
		)vip)mvp where temprownumber>((#{index}-1)*20)

	</select>
	<select id="getVoucherLog" parameterType="int" resultType="VoucherLog">
		select * from dt_user_voucher_log where id=#{0}
	</select>
	<update id="updVoucherLog" parameterType="VoucherLog">
		update dt_user_voucher_log
		set
		user_id=#{user_id},
		user_role_type=#{user_role_type},
		user_role_value=#{user_role_value},
		account_id=#{account_id},
		order_no=#{order_no},
		type=#{type},
		remark=#{remark},
		add_time=#{add_time},
		value=#{value},
		old_value=#{old_value},
		new_value=#{new_value},
		user_ip=#{user_ip},
		transaction_no=#{transaction_no}
		where id=#{id}
	</update>
	<delete id="delVoucherLog" parameterType="int">
		delete from dt_user_voucher_log where id=#{0}
	</delete>

	<!-- // dt_user_point_log 用户积分日子表 -->
	<select id="countPointLog" parameterType="PointLogVo"
		resultType="int">
		select count(*) from dt_user_point_log where 1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
	</select>
	<select id="queryPointLog" parameterType="PointLogVo"
		resultType="PointLog">



		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_point_log   where  1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="user_role_type != null and user_role_type != ''">
			and user_role_type=#{user_role_type}
		</if>

		order by id desc
		)vip)mvp where temprownumber>((#{index}-1)*20)

	</select>
	<select id="getPointLog" parameterType="long" resultType="PointLog">
		select * from dt_user_point_log where id=#{0}
	</select>
	<update id="updPointLog" parameterType="PointLog">
		update dt_user_point_log
		set
		user_id=#{user_id},
		user_role_type=#{user_role_type},
		user_role_value=#{user_role_value},
		account_id=#{account_id},
		order_no=#{order_no},
		type=#{type},
		remark=#{remark},
		add_time=#{add_time},
		value=#{value},
		old_value=#{old_value},
		new_value=#{new_value},
		user_ip=#{user_ip},
		transaction_no=#{transaction_no}
		where id=#{id}
	</update>
	<delete id="delPointLog" parameterType="long">
		delete from dt_user_point_log where id=#{0}
	</delete>

	<!-- // dt_user_credit_log 用户信用日志表 -->

	<select id="countCreditLog" parameterType="CreditLogVo"
		resultType="int">
		select count(*) from dt_user_credit_log where 1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
	</select>
	<select id="queryCreditLog" parameterType="CreditLogVo"
		resultType="CreditLog">

		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_credit_log   where  1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="user_role_type != null and user_role_type != ''">
			and user_role_type=#{user_role_type}
		</if>

		order by id desc
		)vip)mvp where temprownumber>((#{index}-1)*20)

	</select>
	<select id="getCreditLog" parameterType="int" resultType="CreditLog">
		select * from dt_user_credit_log where id=#{0}
	</select>
	<update id="updCreditLog" parameterType="CreditLog">
		update dt_user_credit_log
		set
		user_id=#{user_id},
		user_role_type=#{user_role_type},
		user_role_value=#{user_role_value},
		account_id=#{account_id},
		order_no=#{order_no},
		type=#{type},
		remark=#{remark},
		add_time=#{add_time},
		value=#{value},
		old_value=#{old_value},
		new_value=#{new_value},
		user_ip=#{user_ip},
		transaction_no=#{transaction_no}
		where id=#{id}
	</update>
	<delete id="delCreditLog" parameterType="int">
		delete from dt_user_credit_log where id=#{0}
	</delete>

	<!-- // dt_user_reputation_log 用户信誉日志表 -->

	<select id="countReputationLog" parameterType="ReputationLogVo"
		resultType="int">
		select count(*) from dt_user_reputation_log where 1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
	</select>
	<select id="queryReputationLog" parameterType="ReputationLogVo"
		resultType="ReputationLog">

		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_reputation_log   where  1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="user_role_type != null and user_role_type != ''">
			and user_role_type=#{user_role_type}
		</if>


		order by id desc
		)vip)mvp where temprownumber>((#{index}-1)*20)

	</select>
	<select id="getReputationLog" parameterType="int" resultType="ReputationLog">
		select * from dt_user_reputation_log where id=#{0}
	</select>
	<update id="updReputationLog" parameterType="ReputationLog">
		update dt_user_reputation_log
		set
		user_id=#{user_id},
		user_role_type=#{user_role_type},
		user_role_value=#{user_role_value},
		account_id=#{account_id},
		order_no=#{order_no},
		type=#{type},
		remark=#{remark},
		add_time=#{add_time},
		value=#{value},
		old_value=#{old_value},
		new_value=#{new_value},
		user_ip=#{user_ip},
		transaction_no=#{transaction_no}
		where id=#{id}
	</update>
	<delete id="delReputationLog" parameterType="int">
		delete from dt_user_reputation_log where id=#{0}
	</delete>


	<select id="countYiJiAccount" parameterType="YiJiAccountVo"
		resultType="int">
		select count(*) from dt_yiji_account where 1=1
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="mobile != null and mobile != ''">
			and mobile=#{mobile}
		</if>
		<if test="user_name != null and user_name != ''">
      		and user_name like '%${user_name}%'
    	</if>
    	<if test="yjf_user_name != null and yjf_user_name != ''">
      		and yjf_user_name like '%${yjf_user_name}%'
    	</if>
   		<if test="yjf_user_id != null and yjf_user_id != ''">
			and yjf_user_id=#{yjf_user_id}
		</if>
		<if test="is_del != '-1'">
			and is_del=#{is_del}
		</if>

	</select>
	<select id="queryYiJiAccount" parameterType="YiJiAccountVo"
		resultType="YiJiAccount">
		
	SELECT * FROM 

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM  

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_yiji_account   where  1=1 
		<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
		<if test="mobile != null and mobile != ''">
			and mobile=#{mobile}
		</if>
		<if test="user_name != null and user_name != ''">
      		and user_name like '%${user_name}%'
    	</if>
    	<if test="yjf_user_name != null and yjf_user_name != ''">
      		and yjf_user_name like '%${yjf_user_name}%'
    	</if>
   		<if test="yjf_user_id != null and yjf_user_id != ''">
			and yjf_user_id=#{yjf_user_id}
		</if>
		<if test="is_del != '-1'">
			and is_del=#{is_del}
		</if>
	order by id desc
	 )vip)mvp where temprownumber>((#{index}-1)*20)
	</select>

	<insert id="addYiJiAccount" parameterType="YiJiAccount">
		insert into dt_yiji_account
		(user_id,user_name,mobile,user_type,client_type,yjf_user_id,yjf_user_name,result_source,add_time,is_del)
		values(#{user_id},#{user_name},#{mobile},#{user_type},#{client_type},#{yjf_user_id},#{yjf_user_name},#{result_source},#{add_time},#{is_del})
	</insert>

	<select id="getYiJiAccount" parameterType="int" resultType="YiJiAccount">
		select * from dt_yiji_account where id=#{0}
	</select>

	<update id="updYiJiAccount" parameterType="YiJiAccount">
		update dt_yiji_account set
		user_id=#{user_id},
		user_name=#{user_name},
		mobile=#{mobile},
		user_type=#{user_type},
		client_type=#{client_type},
		yjf_user_id=#{yjf_user_id},
		yjf_user_name=#{yjf_user_name},
		result_source=#{result_source},
		add_time=#{add_time},
		is_del=#{is_del}
		where id=#{id}
	</update>

	<delete id="delYiJiAccount" parameterType="int">
		delete from dt_yiji_account where id=#{0}
	</delete>


	
<!-- 4.15.1.	dt_user_balance_log(账户结算主表) -->
<select id="countUserBalanceLog" parameterType="UserBalanceLogVo" resultType="int">
select count(*)  from dt_user_balance_log  where 1=1
</select>

<select id="queryUserBalanceLog" parameterType="UserBalanceLogVo" resultType="UserBalanceLog">

	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_balance_log   where  1=1

	<if test="user_id != null and user_id != ''">
		and user_id=#{user_id}
	</if>
	<if test="role_type != null and role_type != ''">
		and role_type=#{role_type}
	</if>
	<if test="order_platform != null and order_platform != ''">
		and order_platform=#{order_platform}
	</if>
	<if test="balance_state != null and balance_state != ''">
		and balance_state=#{balance_state}
	</if>
	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)

</select>
<select id="getUserBalanceLog" parameterType="int" resultType="UserBalanceLog">
select * from dt_user_balance_log where id=#{0}
</select>
<insert id="addUserBalanceLog" parameterType="UserBalanceLog">
insert into dt_user_balance_log
(user_id,role_type,role_value,order_platform,order_type,order_no,balance_hash,order_title,order_url,balance_amount,balance_voucher,balance_point,will_balance_date,real_balance_date,balance_state,add_time,is_del)
values(#{user_id},#{role_type},#{role_value},#{order_platform},#{order_type},#{order_no},#{balance_hash},#{order_title},#{order_url},#{balance_amount},#{balance_voucher},#{balance_point},#{will_balance_date},#{real_balance_date},#{balance_state},#{add_time},#{is_del})
</insert>
<update id="updUserBalanceLog" parameterType="UserBalanceLog">
update dt_user_balance_log set
user_id=#{user_id},
role_type=#{role_type},
role_value=#{role_value},
order_platform=#{order_platform},
order_type=#{order_type},
order_no=#{order_no},
balance_hash=#{balance_hash},
order_title=#{order_title},
order_url=#{order_url},
balance_amount=#{balance_amount},
balance_voucher=#{balance_voucher},
balance_point=#{balance_point},
will_balance_date=#{will_balance_date},
real_balance_date=#{real_balance_date},
balance_state=#{balance_state},
add_time=#{add_time},
is_del=#{is_del}
 where  id=#{id}
 
</update>

<delete id="delUserBalanceLog" parameterType="int">
delete from dt_user_balance_log where id=#{0}
</delete>



<!-- 4.16.2.	dt_user_balance_detail(账户结算子表) -->
<select id="countUserBalanceDetail" parameterType="UserBalanceDetailVo" resultType="int">
select count(*)  from dt_user_balance_detail  where 1=1
</select>

<select id="queryUserBalanceDetail" parameterType="UserBalanceDetailVo" resultType="UserBalanceDetail">

SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_balance_detail   where  1=1


		order by id desc
		 )vip)mvp where temprownumber>((#{index}-1)*20)

</select>
<select id="getUserBalanceDetail" parameterType="int" resultType="UserBalanceDetail">
select * from dt_user_balance_detail where id=#{0}
</select>
<insert id="addUserBalanceDetail" parameterType="UserBalanceDetail">
insert into dt_user_balance_detail
(balance_hash,balance_amount,balance_voucher,balance_point,remark,add_time,is_del)
values(#{balance_hash},#{balance_amount},#{balance_voucher},#{balance_point},#{remark},#{add_time},#{is_del})
</insert>
<update id="updUserBalanceDetail" parameterType="UserBalanceDetail">
update dt_user_balance_detail set
balance_hash=#{balance_hash},
balance_amount=#{balance_amount},
balance_voucher=#{balance_voucher},
balance_point=#{balance_point},
remark=#{remark},
add_time=#{add_time},
is_del=#{is_del}
where  id=#{id}
 
</update>

<delete id="delUserBalanceDetail" parameterType="int">
delete from dt_user_balance_detail where id=#{0}
</delete>

<!-- (商家信誉日志) -->
<select id="countScoreLog" parameterType="ScoreLogVo" resultType="int">
select count(*)  from dt_supplier_scorelog  where 1=1
<if test="shop_id != null and shop_id != ''">
     and shop_id=#{shop_id}
   </if>

   <if test="createtime != null and createtime != ''">
	and DATEDIFF(day,createtime,#{createtime})	= 0
</if>
</select>

<select id="queryScoreLog" parameterType="ScoreLogVo" resultType="ScoreLog">

SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_supplier_scorelog   where  1=1
		<if test="shop_id != null and shop_id != ''">
	      and shop_id=#{shop_id}
	    </if>
	
	    <if test="createtime != null and createtime != ''">
			and DATEDIFF(day,createtime,#{createtime}) = 0
		</if>
		order by id desc
		 )vip)mvp where temprownumber>((#{index}-1)*20)

</select>

<select id="getScoreLog" parameterType="int" resultType="ScoreLog">
select * from dt_supplier_scorelog where id=#{0}
</select>

<update id="updScoreLog" parameterType="ScoreLog">
update dt_supplier_scorelog set
shop_id=#{shop_id},
ebusiness_type=#{ebusiness_type},
param_value=#{param_value},
createtime=#{createtime},
remark=#{remark},
object_number=#{object_number},
erule_type=#{erule_type}
where  id=#{id}
 
</update>

 <insert id="addScoreLog" parameterType="ScoreLog">
insert into dt_supplier_scorelog
values(#{shop_id},#{ebusiness_type},#{param_value},#{createtime},#{remark},#{object_number},#{erule_type})
</insert>


<delete id="delScoreLog" parameterType="int">
delete from dt_supplier_scorelog where id=#{0}
</delete>	 

</mapper>
