spring.datasource.url = jdbc:mysql://127.0.0.1:3306/ms
#数据库用户名
spring.datasource.username = root
#数据库密码
spring.datasource.password = 123456
#指定必须保持连接的最小值
spring.datasource.min-idle=20
#指定启动连接池时，初始建立的连接数量
spring.datasource.initial-size=20

#在连接归还到连接池时是否测试该连接.
spring.datasource.test-while-idle=true
#指定空闲连接检查、废弃连接清理、空闲连接池大小调整之间的操作时间间隔
spring.datasource.time-between-eviction-runs-millis=60000
#指定一个空闲连接最少空闲多久后可被清除
spring.datasource.min-evictable-idle-time-millis=300000
#指定获取连接时连接校验的sql查询语句.
spring.datasource.validation-query=SELECT 1
#当从连接池借用连接时，是否测试该连接.
spring.datasource.test-on-borrow=false
#在连接归还到连接池时是否测试该连接
spring.datasource.test-on-return=false


# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#指定数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=20
spring.datasource.minIdle=20
spring.datasource.maxActive=300

# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000

# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
#连接等待的时间
spring.datasource.connection-timeout=6000

spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.jpa.database = MYSQL
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto = update


#reids 配置
#redis数据库名称默认为0
spring.redis.database=1
#reids服务器地址
spring.redis.host=127.0.0.1
#数据库密码
#spring.redis.password=ljx520520
#redis数据库端口号
spring.redis.port=6379
#连接池配置
#连接池最大闲置
spring.redis.pool.max-idle=8
#连接池最小闲置
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
#连接超时时间
spring.redis.timeout=0







#日志相关配置
logging.file=log/messageServer.log
spring.output.ansi.enabled=DETECT
logging.level.org.springframework.web=DEBUG
server.port=8080