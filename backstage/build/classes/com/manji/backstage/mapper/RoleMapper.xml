<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manji.backstage.mapper.RoleMapper" >


<select id="countRoleAudit" parameterType="RoleAuditVo" resultType="int">
select count(*) from dt_user_role_audit_list where 1=1
<if test="bus_user_id != null and bus_user_id != ''">
			and bus_user_id=#{bus_user_id}
		</if>

</select>

<select id="queryRoleAudit" parameterType="RoleAuditVo" resultType="RoleAudit">

	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_role_audit_list   where  1=1

	<if test="bus_user_id != null and bus_user_id != ''">
		and bus_user_id=#{bus_user_id}
	</if>
	and audit_type=#{audit_type}
	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)



</select>

<select id="getRoleAudit" parameterType="int" resultType="RoleAudit">
select * from dt_user_role_audit_list where id=#{0}
</select>

<delete id="delRoleAudit" parameterType="int" > 
delete from dt_user_role_audit_list where id=#{0}
</delete>

<update id="updRoleAudit" parameterType="RoleAudit" >
update dt_user_role_audit_list 
set 
add_user_id =#{add_user_id},bus_user_id =#{bus_user_id},audit_user_id =#{audit_user_id},input_user_id =#{input_user_id},check_user_id =#{check_user_id},audit_type =#{audit_type},audit_value =#{audit_value},add_time =#{add_time},audit_end_time =#{audit_end_time},audit_result =#{audit_result},input_begin_time =#{input_begin_time},input_end_time =#{input_end_time},input_result =#{input_result},check_end_time =#{check_end_time},check_result =#{check_result}
where id=#{id}
</update>

<insert id="addRoleAudit" parameterType="RoleAudit">
insert into dt_user_role_audit_list(add_user_id,bus_user_id,audit_user_id,input_user_id,check_user_id,audit_type,audit_value,add_time,audit_end_time,audit_result,input_begin_time,input_end_time,input_result,check_end_time,check_result)
values(#{add_user_id},#{bus_user_id},#{audit_user_id},#{input_user_id},#{check_user_id},#{audit_type},#{audit_value},#{add_time},#{audit_end_time},#{audit_result},#{input_begin_time},#{input_end_time},#{input_result},#{check_end_time},#{check_result})

</insert>

<select id="queryAuditLog" parameterType="AuditLogVo" resultType="AuditLog">

	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_role_audit_log   where  1=1

	<if test="user_id != null and user_id != ''">
		and user_id=#{user_id}
	</if>
	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)


</select>

<select id="countAuditLog" parameterType="AuditLogVo" resultType="int">
select count(*) from dt_user_role_audit_log where 1=1
<if test="user_id != null and user_id != ''">
			and user_id=#{user_id}
		</if>
</select>

<select id="getAuditLog" parameterType="int" resultType="AuditLog">
select * from dt_user_role_audit_log where id=#{0}
</select>

<insert id="addAuditLog" parameterType="AuditLog" >
insert into dt_user_role_audit_log(user_id,audit_list_id,type,add_time,login_ip)
values(#{user_id},#{audit_list_id},#{type},#{add_time},#{login_ip})
</insert>

<update id="updAuditLog" parameterType="AuditLog">
update  dt_user_role_audit_log set 
user_id=#{user_id},
audit_list_id=#{audit_list_id},
type=#{type},
add_time=#{add_time},
login_ip=#{login_ip}
where id=#{id}
</update>

<delete id="delAuditLog" parameterType="int">
delete from dt_user_role_audit_log where id=#{0}
</delete>



<select id="countManager" parameterType="ManagerVo" resultType="int">
select count(*) from dt_manager where 1=1
</select>

<select id="queryManager" parameterType="ManagerVo" resultType="Manager">


		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_manager   where  1=1


		order by id desc
		 )vip)mvp where temprownumber>((#{index}-1)*20)

</select>

<select id="getManager" parameterType="int" resultType="Manager">
select * from dt_manager where id=#{0}
</select>

<insert id="addManager" parameterType="Manager">
insert into dt_manager 
(role_id,role_type,user_name,password,salt,real_name,telephone,email,amount,total,is_lock,add_time)
values (#{role_id},#{role_type},#{user_name},#{password},#{salt},#{real_name},#{telephone},#{email},#{amount},#{total},#{is_lock},#{add_time})
</insert>

<update id="updManager" parameterType="Manager">
update dt_manager set 
role_id=#{role_id},
role_type=#{role_type},
user_name=#{user_name},
password=#{password},
salt=#{salt},
real_name=#{real_name},
telephone=#{telephone},
email=#{email},
amount=#{amount},
total=#{total},
is_lock=#{is_lock},
add_time=#{add_time}
where id=#{id}
</update>

<delete id="delManager" parameterType="int">
delete from dt_manager where id=#{0}
</delete>



<select id="countManagerRecharge" parameterType="ManagerRechargeVo" resultType="int">
select count(*) from dt_manager_recharge where 1=1
</select>

<select id="queryManagerRecharge" parameterType="ManagerRechargeVo" resultType="ManagerRecharge">

		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_manager_recharge   where  1=1


		order by id desc
		 )vip)mvp where temprownumber>((#{index}-1)*20)

</select>

<select id="getManagerRecharge" parameterType="int" resultType="ManagerRecharge">
select * from dt_manager_recharge where id=#{0}
</select>

<insert id="addManagerRecharge" parameterType="ManagerRecharge">
insert into dt_manager_recharge 
(user_id,amount,remark,user_ip,add_time)
values (#{user_id},#{amount},#{remark},#{user_ip},#{add_time})
</insert>

<update id="updManagerRecharge" parameterType="ManagerRecharge">
update dt_manager_recharge set 
user_id=#{user_id},
amount=#{amount},
remark=#{remark},
user_ip=#{user_ip},
add_time=#{add_time}
where id=#{id}
</update>

<delete id="delManagerRecharge" parameterType="int">
delete from dt_manager_recharge where id=#{0}
</delete>


<select id="countManagerLog" parameterType="ManagerLogVo" resultType="int">
select count(*) from dt_manager_log where 1=1
</select>

<select id="queryManagerLog" parameterType="ManagerLogVo" resultType="ManagerLog">

	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_manager_log   where  1=1
	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)

</select>

<select id="getManagerLog" parameterType="int" resultType="ManagerLog">
select * from dt_manager_log where id=#{0}
</select>

<insert id="addManagerLog" parameterType="ManagerLog">
insert into dt_manager_log 
(user_id,action_type,remark,user_ip,add_time)
values (#{user_id},#{action_type},#{remark},#{user_ip},#{add_time})
</insert>

<update id="updManagerLog" parameterType="ManagerLog">
update dt_manager_log set 
user_id=#{user_id},
action_type=#{action_type},
remark=#{remark},
user_ip=#{user_ip},
add_time=#{add_time}
where id=#{id}
</update>

<delete id="delManagerLog" parameterType="int">
delete from dt_manager_log where id=#{0}
</delete>


<select id="countManagerRole" parameterType="ManagerRoleVo" resultType="int">
select count(*) from dt_manager_role where 1=1
</select>

<select id="queryManagerRole" parameterType="ManagerRoleVo" resultType="ManagerRole">


		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_manager_role   where  1=1


		order by id desc
		 )vip)mvp where temprownumber>((#{index}-1)*20)


</select>

<select id="getManagerRole" parameterType="int" resultType="ManagerRole">
select * from dt_manager_role where id=#{0}
</select>

<insert id="addManagerRole" parameterType="ManagerRole">
insert into dt_manager_role 
(role_name,role_type,is_sys)
values (#{role_name},#{role_type},#{is_sys})
</insert>

<update id="updManagerRole" parameterType="ManagerRole">
update dt_manager_role set 
role_name=#{role_name},
role_type=#{role_type},
is_sys=#{is_sys}
where id=#{id}
</update>

<delete id="delManagerRole" parameterType="int">
delete from dt_manager_role where id=#{0}
</delete>


<select id="countManagerRoleValue" parameterType="ManagerRoleValueVo" resultType="int">
select count(*) from dt_manager_role_value where 1=1
</select>

<select id="queryManagerRoleValue" parameterType="ManagerRoleValueVo" resultType="ManagerRoleValue">

		SELECT * FROM

		( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

		( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_manager_role_value   where  1=1


		order by id desc
		 )vip)mvp where temprownumber>((#{index}-1)*20)

</select>

<select id="getManagerRoleValue" parameterType="int" resultType="ManagerRoleValue">
select * from dt_manager_role_value where id=#{0}
</select>

<insert id="addManagerRoleValue" parameterType="ManagerRoleValue">
insert into dt_manager_role_value 
(role_id,nav_name,action_type)
values (#{role_id},#{nav_name},#{action_type})
</insert>

<update id="updManagerRoleValue" parameterType="ManagerRoleValue">
update dt_manager_role_value set 
role_id=#{role_id},
nav_name=#{nav_name},
action_type=#{action_type}
where id=#{id}
</update>

<delete id="delManagerRoleValue" parameterType="int">
delete from dt_manager_role_value where id=#{0}
</delete>


<!-- 	//agent -->
	
<select id="countAgentGroup"  resultType="java.util.Map">
select title,isnull(t2.count,0) count from dt_agent_groups t1 left join
(select count(group_id) count,group_id from dt_user_role_agentinfo group by group_id )t2
on t1.id=t2.group_id
</select>

<select id="selAgentGroups" resultType="AgentGroup">
	select * from dt_agent_groups order by id 
</select>

<select id="findAgentGroup" resultType="map">
	select id,title from dt_agent_groups
</select>


<insert id="addAgentGroup" parameterType="AgentGroup">

	insert into 
	dt_agent_groups
	(title,grade,upgrade_exp,amount,point,discount,is_default,is_upgrade,is_lock)
	values
	(#{title},#{grade},#{upgrade_exp},#{amount},#{point},#{discount},#{is_default},#{is_upgrade},#{is_lock})

</insert>

<update id="updAgentGroup" parameterType="AgentGroup" >

	update dt_agent_groups 
	set title=#{title},
	grade=#{grade},
	upgrade_exp=#{upgrade_exp},
	amount=#{amount},
	point=#{point},
	discount=#{discount},
	is_default=#{is_default},
	is_upgrade=#{is_upgrade},
	is_lock=#{is_lock}
	where id=#{id}

</update>

<delete id="delAgentGroup" parameterType="int">

	delete from dt_agent_groups where id=#{id}

</delete>

<select id="shopAgentCounts" parameterType="java.lang.String" resultType="String">
	select count(*) from dt_agent_groups where title=#{0}
</select>

<select id="getAgentGroup" parameterType="int" resultType="AgentGroup">
select * from dt_agent_groups where id=#{0}
</select>

<select id="queryAgentById" parameterType="int" resultType="AgentGroup">
select * from dt_agent_groups where id=#{0}
</select>

<select id="getAgentGroupList" resultType="AgentGroup">
select id,title from dt_agent_groups
</select>


<!-- 商家组别管理 -->

<select id="countShopGroup"  resultType="java.util.Map">
select title,isnull(t2.count,0) count from dt_shop_groups t1 left join
(select count(group_id) count,group_id from dt_user_role_shopinfo group by group_id )t2
on t1.id=t2.group_id
</select>



<select id="selShopGroups" resultType="ShopGroup">

	select * from dt_shop_groups

</select>

<select id="findShopGroup" resultType="map">

  select id,title from dt_shop_groups

</select>

<insert id="addShopGroup" parameterType="ShopGroup">

	insert into 
	dt_shop_groups
	(title,grade,upgrade_exp,amount,point,discount,is_default,is_upgrade,is_lock)
	values
	(#{title},#{grade},#{upgrade_exp},#{amount},#{point},#{discount},#{is_default},#{is_upgrade},#{is_lock})

</insert>

<update id="updShopGroup" parameterType="ShopGroup" >

	update dt_shop_groups 
	set title=#{title},
	grade=#{grade},
	upgrade_exp=#{upgrade_exp},
	amount=#{amount},
	point=#{point},
	discount=#{discount},
	is_default=#{is_default},
	is_upgrade=#{is_upgrade},
	is_lock=#{is_lock}
	where id=#{id}

</update>

<delete id="delShopGroup" parameterType="int">

	delete from dt_shop_groups where id=#{id}

</delete>




<select id="getShopGroup" parameterType="int" resultType="ShopGroup">
   select * from dt_shop_groups where id=#{0}
</select>

<select id="queryShopById" parameterType="int" resultType="ShopGroup">
select * from dt_shop_groups where id=#{0}
</select>


<select id="getShopGroupList" resultType="ShopGroup">
select id,title from dt_shop_groups
</select>




	<select id="countGroupId" resultType="map">
		select
		title,isnull(t2.count,0) count from dt_user_groups t1 left join
		(select count(group_id) count,group_id from dt_users group by group_id
		)t2
		on t1.id=t2.group_id
	</select>

	<!-- 用户组别 start -->
	<select id="findUserGroup" resultType="map">
		select id,title from
		dt_user_groups
	</select>

	<select id="userGroupList" resultType="UserGroup">

		select * from
		dt_user_groups

	</select>

	<insert id="addUserGroup" parameterType="UserGroup">

		insert into
		dt_user_groups(title,grade,upgrade_exp,amount,point,discount,is_default,is_upgrade,is_lock)
		values
		(#{title},#{grade},#{upgrade_exp},#{amount},#{point},#{discount},#{is_default},#{is_upgrade},#{is_lock})

	</insert>

	<update id="updUserGroup" parameterType="UserGroup">

		update dt_user_groups
		set title=#{title},
		grade=#{grade},
		upgrade_exp=#{upgrade_exp},
		amount=#{amount},
		point=#{point},
		discount=#{discount},
		is_default=#{is_default},
		is_upgrade=#{is_upgrade},
		is_lock=#{is_lock}
		where id=#{id}

	</update>

	<delete id="delUserGroup" parameterType="int">

		delete from
		dt_user_groups where id=#{id}

	</delete>


	<select id="getUsersOnluGroup" resultType="User">

		select
		id,group_id,user_name from dt_users

	</select>


	<update id="chgUserGroup" parameterType="User">

		update dt_users set
		group_id =#{group_id} where id=#{id}

	</update>

	<select id="getUserGroup" parameterType="int" resultType="UserGroup">
		select
		* from dt_user_groups where id=#{id}
	</select>


	<!-- 用户组别 end -->
	
<!-- 2.8.1.dt_role_operator_type（角色后台管理操作员类别信息表） -->
<select id="countRoleOperatorType" parameterType="RoleOperatorTypeVo" resultType="int">
select count(*)  from dt_role_operator_type  where 1=1
</select>

<select id="queryRoleOperatorType" parameterType="RoleOperatorTypeVo" resultType="RoleOperatorType">

	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_role_operator_type   where  1=1
	<if test="user_id != null and user_id != ''">
		and user_id=#{user_id}
	</if>
	<if test="role_type != null and role_type != ''">
		and role_type=#{role_type}
	</if>
	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)

</select>
<select id="getRoleOperatorType" parameterType="int" resultType="RoleOperatorType">
select * from dt_role_operator_type where id=#{0}
</select>
<insert id="addRoleOperatorType" parameterType="RoleOperatorType">
insert into dt_role_operator_type
(type_name,user_id,role_type,role_type_value,is_sys)
values(#{type_name},#{user_id},#{role_type},#{role_type_value},#{is_sys})
</insert>
<update id="updRoleOperatorType" parameterType="RoleOperatorType">
update dt_role_operator_type set
type_name=#{type_name},
user_id=#{user_id},
role_type=#{role_type},
role_type_value=#{role_type_value},
is_sys=#{is_sys}
 where  id=#{id}
 
</update>

<delete id="delRoleOperatorType" parameterType="int">
delete from dt_role_operator_type where id=#{0}
</delete>


<!-- 2.8.2.dt_role_operator_type_value（角色后台管理操作员类别对应权限值信息表） -->

<select id="countRoleOperatorTypeValue" parameterType="RoleOperatorTypeValueVo" resultType="int">
select count(*)  from dt_role_operator_type_value  where 1=1
</select>

<select id="queryRoleOperatorTypeValue" parameterType="RoleOperatorTypeValueVo" resultType="RoleOperatorTypeValue">

	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_role_operator_type_value   where  1=1

	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)


</select>
<select id="getRoleOperatorTypeValue" parameterType="int" resultType="RoleOperatorTypeValue">
select * from dt_role_operator_type_value where id=#{0}
</select>
<insert id="addRoleOperatorTypeValue" parameterType="RoleOperatorTypeValue">
insert into dt_role_operator_type_value
(type_id,nav_name,action_type)
values(#{type_id},#{nav_name},#{action_type})
</insert>
<update id="updRoleOperatorTypeValue" parameterType="RoleOperatorTypeValue">
update dt_role_operator_type_value set
type_id=#{type_id},
nav_name=#{nav_name},
action_type=#{action_type}
 where  id=#{id}
 
</update>

<delete id="delRoleOperatorTypeValue" parameterType="int">
delete from dt_role_operator_type_value where id=#{0}
</delete>


<!-- 2.8.4.dt_user_role（用户角色信息表） -->
<select id="countUserRole" parameterType="UserRoleVo" resultType="int">
select count(*)  from dt_user_role  where 1=1
</select>

<select id="queryUserRole" parameterType="UserRoleVo" resultType="UserRole">

	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_role   where  1=1
	<if test="user_id != null and user_id != ''">
		and user_id=#{user_id}
	</if>
	<if test="role_type != null and role_type != ''">
		and role_type=#{role_type}
	</if>
	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)

</select>
<select id="getUserRole" parameterType="int" resultType="UserRole">
select * from dt_user_role where id=#{0}
</select>
<insert id="addUserRole" parameterType="UserRole">
insert into dt_user_role
(user_id,role_type,role_value,operator_type_id,add_time,expired_time,state,update_time,remark,is_online)
values(#{user_id},#{role_type},#{role_value},#{operator_type_id},#{add_time},#{expired_time},#{state},#{update_time},#{remark},#{is_online})
</insert>
<update id="updUserRole" parameterType="UserRole">
update dt_user_role set
user_id=#{user_id},
role_type=#{role_type},
role_value=#{role_value},
operator_type_id=#{operator_type_id},
add_time=#{add_time},
expired_time=#{expired_time},
state=#{state},
update_time=#{update_time},
remark=#{remark},
is_online=#{is_online}
 where  id=#{id}
 
</update>

<delete id="delUserRole" parameterType="int">
delete from dt_user_role where id=#{0}
</delete>


<!-- 2.8.3.dt_role_operator_navigation（角色后台管理总菜单信息表） -->
<select id="countRoleOperatorNavigation" parameterType="RoleOperatorNavigationVo" resultType="int">
select count(*)  from dt_role_operator_navigation  where 1=1
</select>

<select id="queryRoleOperatorNavigation" parameterType="RoleOperatorNavigationVo" resultType="RoleOperatorNavigation">

	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_role_operator_navigation   where  1=1

	<if test="role_type != null and role_type != ''">
		and role_type=#{role_type}
	</if>
	and is_lock=#{is_lock}
	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)


</select>
<select id="getRoleOperatorNavigation" parameterType="int" resultType="RoleOperatorNavigation">
select * from dt_role_operator_navigation where id=#{0}
</select>
<insert id="addRoleOperatorNavigation" parameterType="RoleOperatorNavigation">
insert into dt_role_operator_navigation
(parent_id,role_type,name,title,sub_title,icon_url,link_url,sort_id,is_lock,remark,action_type)
values(#{parent_id},#{role_type},#{name},#{title},#{sub_title},#{icon_url},#{link_url},#{sort_id},#{is_lock},#{remark},#{action_type})
</insert>
<update id="updRoleOperatorNavigation" parameterType="RoleOperatorNavigation">
update dt_role_operator_navigation set
parent_id=#{parent_id},
role_type=#{role_type},
name=#{name},
title=#{title},
sub_title=#{sub_title},
icon_url=#{icon_url},
link_url=#{link_url},
sort_id=#{sort_id},
is_lock=#{is_lock},
remark=#{remark},
action_type=#{action_type}
where  id=#{id}
 
</update>

<delete id="delRoleOperatorNavigation" parameterType="int">
delete from dt_role_operator_navigation where id=#{0}
</delete>


<!-- 2.8.18.dt_user_role_business（用户商务角色信息表） -->
<select id="countUserRoleBusiness" parameterType="UserRoleBusinessVo" resultType="int">
select count(*)  from dt_user_role_business  where 1=1
</select>

<select id="queryUserRoleBusiness" parameterType="UserRoleBusinessVo" resultType="UserRoleBusiness">


	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_role_business   where  1=1

	<if test="user_id != null and user_id != ''">
		and user_id=#{user_id}
	</if>
	<if test="status != -1">
		and status=#{status}
	</if>
	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)

</select>
<select id="getUserRoleBusiness" parameterType="int" resultType="UserRoleBusiness">
select * from dt_user_role_business where id=#{0}
</select>
<insert id="addUserRoleBusiness" parameterType="UserRoleBusiness">
insert into dt_user_role_business
(user_id,buiness_type,end_time,status,remark,update_time,add_time,is_del,name,mobile,email,qq,area)
values(#{user_id},#{buiness_type},#{end_time},#{status},#{remark},#{update_time},#{add_time},#{is_del},#{name},#{mobile},#{email},#{qq},#{area})
</insert>
<update id="updUserRoleBusiness" parameterType="UserRoleBusiness">
update dt_user_role_business set
user_id=#{user_id},
buiness_type=#{buiness_type},
end_time=#{end_time},
status=#{status},
remark=#{remark},
update_time=#{update_time},
add_time=#{add_time},
is_del=#{is_del},
name=#{name},
mobile=#{mobile},
email=#{email},
qq=#{qq},
area=#{area}
where  id=#{id}
 
</update>

<delete id="delUserRoleBusiness" parameterType="int">
delete from dt_user_role_business where id=#{0}
</delete>

<!--//dt_user_role_medal(用户角色荣誉勋章信息表) -->
<select id="countUserRoleMedal" parameterType="UserRoleMedalVo" resultType="int">
select count(*)  from dt_user_role_medal  where 1=1
</select>

<select id="queryUserRoleMedal" parameterType="UserRoleMedalVo" resultType="UserRoleMedal">

	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_role_medal   where  1=1

	<if test="user_id != null and user_id != ''">
		and user_id=#{user_id}
	</if>
	<if test="role_type != null and role_type != ''">
		and role_type=#{role_type}
	</if>
	<if test="state != null and state != ''">
		and state=#{state}
	</if>
	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)

</select>
<select id="getUserRoleMedal" parameterType="int" resultType="UserRoleMedal">
select * from dt_user_role_medal where id=#{0}
</select>
<insert id="addUserRoleMedal" parameterType="UserRoleMedal">
insert into dt_user_role_medal
(user_id,role_type,role_value,medal_value,add_time,expired_time,state,update_time,remark,is_del)
values(#{user_id},#{role_type},#{role_value},#{medal_value},#{add_time},#{expired_time},#{state},#{update_time},#{remark},#{is_del})
</insert>
<update id="updUserRoleMedal" parameterType="UserRoleMedal">
update dt_user_role_medal set
user_id=#{user_id},
role_type=#{role_type},
role_value=#{role_value},
medal_value=#{medal_value},
add_time=#{add_time},
expired_time=#{expired_time},
state=#{state},
update_time=#{update_time},
remark=#{remark},
is_del=#{is_del}
where  id=#{id}
 
</update>

<delete id="delUserRoleMedal" parameterType="int">
delete from dt_user_role_medal where id=#{0}
</delete>

<!-- dt_user_role_group(用户角色分组信息表) -->
<select id="countUserRoleGroup" parameterType="UserRoleGroupVo" resultType="int">
select count(*)  from dt_user_role_group  where 1=1
</select>

<select id="queryUserRoleGroup" parameterType="UserRoleGroupVo" resultType="UserRoleGroup">

	SELECT * FROM

	( SELECT row_number() over (order by tempcolumn) temprownumber, * FROM

	( SELECT TOP (#{index}*20) tempcolumn=0, *  from dt_user_role_group   where  1=1

	<if test="user_id != null and user_id != ''">
		and user_id=#{user_id}
	</if>
	<if test="role_type != null and role_type != ''">
		and role_type=#{role_type}
	</if>
	<if test="state != null and state != ''">
		and state=#{state}
	</if>
	order by id desc
	)vip)mvp where temprownumber>((#{index}-1)*20)

</select>
<select id="getUserRoleGroup" parameterType="int" resultType="UserRoleGroup">
select * from dt_user_role_group where id=#{0}
</select>
<insert id="addUserRoleGroup" parameterType="UserRoleGroup">
insert into dt_user_role_group
(user_id,role_type,role_value,group_value,state,update_time,remark,is_del)
values(#{user_id},#{role_type},#{role_value},#{group_value},#{state},#{update_time},#{remark},#{is_del})
</insert>
<update id="updUserRoleGroup" parameterType="UserRoleGroup">
update dt_user_role_group set
user_id=#{user_id},
role_type=#{role_type},
role_value=#{role_value},
group_value=#{group_value},
state=#{state},
update_time=#{update_time},
remark=#{remark},
is_del=#{is_del}
where  id=#{id}
 
</update>

<delete id="delUserRoleGroup" parameterType="int">
delete from dt_user_role_group where id=#{0}
</delete>

</mapper>