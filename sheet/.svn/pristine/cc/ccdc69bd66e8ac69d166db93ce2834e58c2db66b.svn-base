package com.manji.sheet.service;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;

import java.util.List;

/**
 * Created by lcq on 2017/6/15.
 */
public class PCService {


    /**
     * 根据对应类型获取页面信息
     * @param sponsor_id
     * @param short_title
     * @param shop_user_id
     * @param start_time
     * @param end_time
     * @param status
     * @param sheet_no
     * @return
     */
    public List<Record> getInformation(int sponsor_id,String short_title,Integer shop_user_id,String start_time,String end_time,Integer status,String sheet_no) {

        StringBuffer sb = new StringBuffer();

        //根据传入类型显示数据
        if (short_title == "FEB") {
            sb.append("select  t.title,t.status,s.sheet_no,s.start_time from dt_sheets s left join dt_sheet_type t  on  s.type_code = t.code " +
                    " where t.short_title='FEB' and t.layer=2 and s.sponsor_id="+sponsor_id);
        } else if (short_title == "RMJ") {
            sb.append("select  t.title,t.status,s.sheet_no,s.start_time from dt_sheets s left join dt_sheet_type t  on  s.type_code = t.code " +
                    " where t.short_title='RMJ' and t.layer=2 and s.sponsor_id="+sponsor_id);
        } else if (short_title == "RGD" || short_title == "RSH") {
            sb.append("select b.shop_user_id,s.sheet_no,s.start_time,s.sponsor,s.status,t.title,t.merge_title from dt_sheets s " +
                    "left join dt_sheet_business b on s.id = b.sheet_id " +
                    "left join dt_sheet_type t on s.type_code=t.code " +
                    "where t.short_title in ('RSD','RSH') and t.layer=2 and b.shop_user_id= "+shop_user_id);
        } else if (short_title == "EVD") {
            sb.append("select b.shop_user_id,s.sheet_no,s.start_time,s.sponsor,s.status,t.title,t.merge_title from dt_sheets s " +
                    "left join dt_sheet_business b on s.id = b.sheet_id " +
                    "left join dt_sheet_type t on s.type_code=t.code " +
                    "where t.short_title = 'EVD' and t.layer=2 and b.shop_user_id= "+shop_user_id);
        } else if (short_title == "TRD") {
            sb.append("select b.shop_user_id,s.sheet_no,s.start_time,s.sponsor,s.status,t.title,t.merge_title from dt_sheets s " +
                    "left join dt_sheet_business b on s.id = b.sheet_id " +
                    "left join dt_sheet_type t on s.type_code=t.code " +
                    "where t.short_title = 'TRD' and t.layer=2 and b.shop_user_id= "+shop_user_id);
        }

        //根据条件搜索
        if (start_time != null && !"".equals(start_time)) {
            sb.append(" and s.start_time>"+start_time);
        }
        if (end_time != null && !"".equals(end_time)) {
            sb.append(" and s.start_time<"+end_time);
        }
        if (status != null && !"".equals(status)) {
            sb.append("s.status="+status);
        }
        if (sheet_no != null && !"".equals(sheet_no)) {
            sb.append("s.sheet_no="+sheet_no);
        }
        List<Record> records = Db.find(sb.toString());

        return records;
    }

    /**
     * 我要建议详情信息
     * @param sheet_no
     * @param status
     * @return
     */
    public Record getAccept(String sheet_no,int status){

        StringBuffer sb = new StringBuffer();
        if (status == 1) {
            sb.append("select s.sheet_no,s.start_time,t.title,t.status,i.descr,i.pics from dt_sheets s " +
                    "left join dt_sheet_type t on s.type_code=t.code " +
                    "left join dt_sheet_info i on s.id=i.sheet_id " +
                    "where s.sheet_no = "+sheet_no+" and status ="+status);
        } else {
            sb.append("select s.sheet_no,s.start_time,t.title,t.status,i.descr,i.pics,d.content,d.pics as d_pics from dt_sheets s " +
                    "left join dt_sheet_type t on s.type_code=t.code " +
                    "left join dt_sheet_info i on s.id=i.sheet_id " +
                    "left join dt_sheet_detail d on s.id=d.sheet_id " +
                    "where s.sheet_no ="+sheet_no+" and status ="+status);
        }

        Record record = Db.findFirst(sb.toString());

        return record;
    }

    /**
     * 发起建议
     */

    public  void addSuggestion(){


    }

    /**
     * 我要举报详情
     */
    public Record getSupport(String sheet_no,int status){
        StringBuffer sb = new StringBuffer();
        if (status == 3) {
            sb.append("select s.sheet_no,s.start_time,t.title,t.status,i.descr,i.pics from dt_sheets s " +
                    "left join dt_sheet_type t on s.type_code=t.code " +
                    "left join dt_sheet_info i on s.id=i.sheet_id " +
                    "where s.sheet_no = "+sheet_no+" and status ="+status);
        } else if (status == 4){
            sb.append("select s.sheet_no,s.start_time,t.title,t.status,i.descr,i.pics,d.content,d.pics as d_pics from dt_sheets s " +
                    "left join dt_sheet_type t on s.type_code=t.code " +
                    "left join dt_sheet_info i on s.id=i.sheet_id " +
                    "left join dt_sheet_detail d on s.id=d.sheet_id " +
                    "where s.sheet_no ="+sheet_no+" and status ="+status);
        }
        Record record = Db.findFirst(sb.toString());
        return record;
    }
    /**
     * 我被举报列表
     * @param shop_user_id
     * @return
     */
    public List<Record> reported(long shop_user_id,String start_time,String end_time,Integer status,String sheet_no){

        StringBuffer sb = new StringBuffer("select b.shop_user_id,s.sheet_no,s.start_time,s.sponsor,s.status,t.title,t.merge_title from dt_sheet_business b " +
                "left join dt_sheets s on b.sheet_id=s.id " +
                "left join dt_sheet_type t on s.type_code=t.code " +
                "where t.layer=2 and b.shop_user_id= "+shop_user_id);
        if (start_time != null && !"".equals(start_time)) {
            sb.append(" and s.start_time>"+start_time);
        }
        if (end_time != null && !"".equals(end_time)) {
            sb.append(" and s.start_time<"+end_time);
        }
        if (status != null && !"".equals(status)) {
            sb.append(" and s.status="+status);
        }
        if (sheet_no != null && !"".equals(sheet_no)) {
            sb.append(" and s.sheet_no like '%"+sheet_no+"%'");
        }
        List<Record> records = Db.find(sb.toString());

        return records;
    }


}
