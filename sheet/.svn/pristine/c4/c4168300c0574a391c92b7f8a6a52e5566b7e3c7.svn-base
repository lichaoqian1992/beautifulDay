package com.manji.sheet.service;

import com.jfinal.aop.Before;
import com.jfinal.core.Controller;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.jfinal.plugin.activerecord.tx.Tx;
import com.manji.sheet.model.reqParam.SheetInfoParam;
import com.manji.sheet.model.reqParam.WorkOrderParam;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by Administrator on 2017/6/17.
 */
public class ManageService extends BaseSheetService {
    /**
     * 工单查询
     */
    public Page<Record> Acceptance(int pageNumber, int pageSize, WorkOrderParam workOrder){
        StringBuffer sql=new StringBuffer();
        sql.append("from dt_sheets ds left join dt_sheet_type dst on ds.type_code=dst.code and dst.status=1 left join dt_sheet_detail dsd on dsd.sheet_id=ds.id left join  dt_sheet_source dss on dss.code=ds.source_code and dss.status=1 where 1=1");
        sql=AcceptanceSQL(sql,workOrder);
        return Db.paginate(pageNumber, pageSize, "select ds.sheet_no,ds.start_time,dst.title typeCode,ds.sponsor,dss.title sourceCode,ds.status,dsd.receiver,dsd.exe_dept,dsd.sup_dept",sql.toString());
    }

    /**
     * 新增工单
     */
    public String InsertWorkNumber(){
        String stu="";

        return stu;
    }

    /**
     * 工单交易纠纷
     * @param sheetInfo
     * @return
     */
    public Map<String, Object> SelectWorkNumber(SheetInfoParam sheetInfo){
        //工单信息
        Record WorkNumber=Db.findFirst("select do.order_amount,do.express_fee,dsb.order_id,ds.status,dsd.exe_dept,dsd.sup_dept,do.order_no,ds.start_time,dst.title,durs.name,dss.title,ds.sponsor_type,ds.sponsor,ds.sponsor_contact,ds.priority_level from dt_sheets ds left join dt_sheet_type dst on ds.type_code=dst.code and dst.status=1 left join dt_sheet_detail dsd on dsd.sheet_id=ds.id left join  dt_sheet_source dss on dss.code=ds.source_code and dss.status=1 left join dt_sheet_business dsb on dsb.sheet_id=ds.id left join dt_orders do on do.id=dsb.order_id and do.is_del=0 left join dt_user_role_shopinfo durs on dsb.shop_user_id=durs.user_id and  durs.user_id<>0 and durs.is_del=0 and durs.dpkg=1 where 1=1 ds.id=?",sheetInfo.getId());
        Record WorkInfo=Db.findFirst("select * from dt_sheet_info where sheet_id=?",sheetInfo.getId());

        Map<String, Object> map=new HashMap<String, Object>();
        map.put("WorkNumber",WorkNumber);
        map.put("WorkInfo",WorkInfo);
        return map;
    }

    /**
     * 订单详情
     * @param WorkNumber
     * @return
     */
    public Map<String, Object> SelectOrderInfo(Record WorkNumber){
        //买家详细信息
        Record BuyersInfo=Db.findFirst("select do.status,do.order_no,do.add_time,dup.person_name,du.mobile dumobile,dogone.accept_name,dogone.mobile dogonemobile,dogone.post_code,dogone.address,do.invoice_title,isnull(do.message,'') message from dt_orders do left join dt_order_goodinfo dog on do.id=dog.order_id left join dt_users du on du.id=do.user_id left join dt_user_personinfo dup on dup.user_id=du.id left join dt_order_goodinfo dogone on dogone.order_id=do.id  where do.is_del=0 and do.id=?",WorkNumber.get("order_id"));
        List<Record> BuyersList=Db.find("select dog.img_url,dog.goods_title,dog.spec_text,dog.real_price,dog.quantity from dt_order_goods dog where dog.id=?",WorkNumber.get("order_id"));

        //优惠
        Double money=0.0;
        for(Record x : BuyersList){
            Double moneyChild=x.getInt("quantity")*x.getDouble("real_price");
            money+=moneyChild;
        }
        Record rc=new Record();
        rc.set("money",money);
        rc.set("order_amount",WorkNumber.getDouble("order_amount"));
        rc.set("express_fee",WorkNumber.getDouble("express_fee"));
        rc.set("discount",0.0);

        //发货地址
        Record ShipAddress=Db.findFirst("select dse.* from dt_orders do left join dt_shop_expensesInfo dse on dse.shop_id=do.shop_user_id and dse.type=0 where do.id=?",WorkNumber.get("order_id"));
        //物流信息
        Record logistics=Db.findFirst("select dog.express_no,de.title,dog.express_time from dt_order_goodinfo dog left join  dt_express de on de.id=dog.express_id where dog.order_id",WorkNumber.get("order_id"));


        Map<String, Object> map=new HashMap<String, Object>();
        map.put("rc",rc);
        map.put("logistics",logistics);
        map.put("ShipAddress",ShipAddress);
        map.put("BuyersInfo",BuyersInfo);
        return map;
    }

    /**
     *退款详情
     * @param WorkNumber
     * @return
     */
    public Map<String, Object> SelectRefund(Record WorkNumber){
        List<Record> RefundList=Db.find("select dob.id,dob.back_return_no,dob.real_back_amount,dob.back_goods,dob.back_category,dob.back_resource from dt_order_backinfo dob where dob.order_id=?",WorkNumber.get("order_id"));
        for(Record x:RefundList){
            Record logistics=Db.findFirst("select de.title from dt_express_info dei left join dt_express de on dei.express_id=de.id where express_no=?",x.get("back_return_no"));
            x.set("back_title",logistics.get("title"));
        }
        Map<String, Object> map=new HashMap<String, Object>();
        return map;
    }

    /**
     *退款商品详情
     * @param id
     * @return
     */
    public List<Record> SelectRefundShop(int id){
        List<Record> RefundShopList=Db.find("select * from dt_order_goods where back_order_id=?",id);
        return  RefundShopList;
    }
    /**
     * 工单查询sql拼装
     */
    public StringBuffer AcceptanceSQL(StringBuffer sql,WorkOrderParam workOrder){
        if(!workOrder.getStatus().equals("")){
            sql.append(" and ds.status = "+workOrder.getStatus());
        }
        if(!workOrder.getSourceCode().equals("")){
            sql.append(" and dst.title = "+workOrder.getSourceCode());
        }
        if(!workOrder.getTypeCode().equals("")){
            sql.append(" and dss.title = "+workOrder.getTypeCode());
        }
        if(!workOrder.getSearch().equals("")){
            sql.append(" and (ds.sheet_no = "+workOrder.getSearch()+" or ds.sponsor="+workOrder.getSearch()+")");
        }
        if(!workOrder.getStartTime().equals("") && !workOrder.getEndTime().equals("")){
            sql.append(" and ds.start_time BETWEEN '"+workOrder.getStartTime()+"' and '"+workOrder.getEndTime()+"'");
        }else if(!workOrder.getStartTime().equals("") && workOrder.getEndTime().equals("")){
            sql.append(" and ds.start_time > '"+workOrder.getStartTime()+"'");
        }else if(workOrder.getStartTime().equals("") && !workOrder.getEndTime().equals("")){
            sql.append(" and ds.start_time < '"+workOrder.getEndTime()+"'");
        }
        return sql;
    }

    /************************************************************************************************************************************************************/
}
